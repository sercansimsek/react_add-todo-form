{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","cn","TodoList","todos","map","getUserById","userId","usersFromServer","find","App","useState","selectedUserId","setselectedUserId","setTitle","currentTodos","setCurrentTodos","hasUserError","setHasUserError","hasTitleError","setHasTitleError","onSubmit","event","preventDefault","Math","max","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79ac40a1.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name, email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      key={id}\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2\n        className=\"TodoInfo__title\"\n      >\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <ul className=\"TodoList__item\">\n    {todos.map(todo => (\n      <li key={todo.id}>\n        <TodoInfo\n          todo={todo}\n        />\n      </li>\n    ))}\n  </ul>\n);\n","import './App.scss';\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\n\nfunction getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [selectedUserId, setselectedUserId] = useState(0);\n  const [title, setTitle] = useState('');\n  const [currentTodos, setCurrentTodos] = useState(todos);\n  const [hasUserError, setHasUserError] = useState(false);\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  function getNewTodo() {\n    const newId = Math.max(...currentTodos.map(todo => todo.id)) + 1;\n\n    return {\n      id: newId,\n      title,\n      completed: false,\n      userId: selectedUserId,\n      user: getUserById(selectedUserId),\n    };\n  }\n\n  const titleHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const selectedUserHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setselectedUserId(+event.target.value);\n    setHasUserError(false);\n  };\n\n  const buttonHandler = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserError(!selectedUserId);\n\n    if (title && selectedUserId) {\n      setCurrentTodos([\n        ...currentTodos,\n        getNewTodo(),\n      ]);\n\n      setTitle('');\n      setselectedUserId(+'');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={buttonHandler}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={titleHandler}\n          />\n          {hasTitleError && (\n            <span\n              className=\"error\"\n            >\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUserId}\n            onChange={selectedUserHandler}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserError && (\n            <span\n              className=\"error\"\n            >\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={currentTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}